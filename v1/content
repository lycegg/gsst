设计思路：
暂时认为文件就只有一小节。事实上绝对不止这么多，之后的版本再更新为30小节并行并且循环到文件结束。
gpu每个线程要知道自己解压后的内容放在哪里。假设分成128份并行，有两种方案，分别是每块用相同的压缩后大小，和每块用相同的压缩前大小。因为压缩后的文件中有的是一个字节就能解密，有的是字符255（escape）+一个字符进行解密，分界较为复杂，所以使用相同的压缩后大小。但是因为每个字符解密出来的长度由1到8都有可能，所以不一定能完美相等，再给每块加一字节用于偏差量。
关于实际分块数量，对于足够大的文件是128块，小文件的块数与文件大小成正比。
每一小节的格式为：4字节的原始大小，8字节符号+1字节是否0终止+8字节各长度符号数量（这17字节与原版相同，但是我没有处理0终止的标记），至多8*255字节的符号表，三字节的每块对应原始大小（基准），一字节分块数sum，下面是sum个3字节用于编码压缩后每块的截止位置，sum-1个一字节用于每块的原始大小（偏移量）。
对于压缩率的影响：附带了三个文件，genome_gpu_jiema是原始文件1000000字节，genome是可以cpu解码的文件348501字节，genome_gpu_tehua是加了分块标记的文件349017字节。
关于速度测试，因为实际gpu并行速度可以达到这个程序的30倍，所以暂时不测，下个版本测试。